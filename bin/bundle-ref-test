#!/usr/bin/env php
<?php

use JsonPointer\ReferenceResolver\PackageVendorReferenceResolver;
use Stefna\OpenApiBundler\Application;
use Stefna\OpenApiBundler\Command\BundleCommand;
use Stefna\OpenApiBundler\Definition\SchemaDefinition;

if (PHP_SAPI !== 'cli') {
	echo 'Warning: bundle should be invoked via the CLI version of PHP, not the ' . PHP_SAPI . ' SAPI' . PHP_EOL;
}

$files = array(
	__DIR__ . '/vendor/autoload.php',
	__DIR__ . '/../vendor/autoload.php',
	__DIR__ . '/../../../vendor/autoload.php',
	__DIR__ . '/../../../autoload.php',
);

foreach ($files as $file) {
	if (file_exists($file)) {
		require $file;
		define('SOA_BUNDLE_COMPOSER_INSTALL', $file);
		break;
	}
}

if (!defined('SOA_BUNDLE_COMPOSER_INSTALL')) {
	die(
		'You need to set up the project dependencies using the following commands:' . PHP_EOL .
		'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
		'php composer.phar install' . PHP_EOL
	);
}

$version = '0.0.0';

$composerRoot = dirname(__DIR__) . '/examples/packages/vendor';
$nodeRoot = dirname(__DIR__) . '/examples/packages/test_node_modules';

$packageRefResolver = new PackageVendorReferenceResolver();
$packageRefResolver->addVendorFolder('php', $composerRoot);
$packageRefResolver->addVendorFolder('node', $nodeRoot);

$application = new Application(new SchemaDefinition('bundle', new BundleCommand(null, $packageRefResolver)));

$application->run();
